properties( [
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '100')),
        disableConcurrentBuilds(),
            ]
)

description = ""
failed = false

def runFor(sync_version, arch="x86_64") {
    echo "Triggering reposync for ${sync_version}-${arch}"
    b = build       job: '/aos-cd-builds/build%2Freposync', propagate: false,
                    parameters: [ string(name: 'SYNC_VERSION', value: sync_version),
                                  string(name: 'ARCH', value: arch),
                                ]

    description += "${sync_version}-${arch} - ${b.result}\n"
    failed |= (b.result != "SUCCESS")
}

node() {
    buildlib = load("/pipeline-scripts/buildlib.groovy")
    def versions = ['4.1', '4.2', '4.3', '4.4']
    for ( String version : versions ) {
	def arches = buildlib.branch_arches("openshift-${version}")
	for ( String arch : arches ) {
	    runFor(version, arch)
	}
    }
}

currentBuild.description = description.trim()
currentBuild.result = failed ? "FAILURE" : "SUCCESS"
